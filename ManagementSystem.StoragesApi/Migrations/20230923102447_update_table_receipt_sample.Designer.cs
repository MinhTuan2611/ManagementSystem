// <auto-generated />
using System;
using ManagementSystem.StoragesApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagementSystem.StoragesApi.Migrations
{
    [DbContext(typeof(StoragesDbContext))]
    [Migration("20230923102447_update_table_receipt_sample")]
    partial class update_table_receipt_sample
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManagementSystem.Common.Entities.ActivityLog", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.ToTable("ActivityLog");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.AnimalPartRefCode", b =>
                {
                    b.Property<int>("AnimalPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalPartId"), 1L, 1);

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AnimalPartId");

                    b.ToTable("AnimalPartRefCodes");

                    b.HasData(
                        new
                        {
                            AnimalPartId = 1,
                            PartName = "Mũi",
                            RefCode = "001"
                        },
                        new
                        {
                            AnimalPartId = 2,
                            PartName = "Nọng/má",
                            RefCode = "002"
                        },
                        new
                        {
                            AnimalPartId = 3,
                            PartName = "Thủ/đầu",
                            RefCode = "003"
                        },
                        new
                        {
                            AnimalPartId = 4,
                            PartName = "Tai",
                            RefCode = "004"
                        },
                        new
                        {
                            AnimalPartId = 5,
                            PartName = "Cổ",
                            RefCode = "005"
                        },
                        new
                        {
                            AnimalPartId = 6,
                            PartName = "Sườn vai",
                            RefCode = "006"
                        },
                        new
                        {
                            AnimalPartId = 7,
                            PartName = "Thịt vai",
                            RefCode = "007"
                        },
                        new
                        {
                            AnimalPartId = 8,
                            PartName = "Bắp giò",
                            RefCode = "008"
                        },
                        new
                        {
                            AnimalPartId = 9,
                            PartName = "Dựng/Móng giò",
                            RefCode = "009"
                        },
                        new
                        {
                            AnimalPartId = 10,
                            PartName = "Mỡ lưng",
                            RefCode = "010"
                        },
                        new
                        {
                            AnimalPartId = 11,
                            PartName = "Cốt lết",
                            RefCode = "011"
                        },
                        new
                        {
                            AnimalPartId = 12,
                            PartName = "Thăn",
                            RefCode = "012"
                        },
                        new
                        {
                            AnimalPartId = 13,
                            PartName = "Sườn",
                            RefCode = "013"
                        },
                        new
                        {
                            AnimalPartId = 14,
                            PartName = "Ba rọi",
                            RefCode = "014"
                        },
                        new
                        {
                            AnimalPartId = 15,
                            PartName = "Thịt mông",
                            RefCode = "015"
                        },
                        new
                        {
                            AnimalPartId = 16,
                            PartName = "Thịt đùi",
                            RefCode = "016"
                        },
                        new
                        {
                            AnimalPartId = 17,
                            PartName = "Đuôi",
                            RefCode = "017"
                        });
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"), 1L, 1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("totalAmount")
                        .HasColumnType("int");

                    b.Property<int>("totalChange")
                        .HasColumnType("int");

                    b.Property<int>("totalPaid")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.BillDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountAmount")
                        .HasColumnType("int");

                    b.Property<bool>("DiscountByPercentage")
                        .HasColumnType("bit");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.BillPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("BillPayments");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManagerID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryRefCode")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "CÔNG CỤ DỤNG CỤ",
                            CategoryRefCode = 1,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8242),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8257),
                            ParentId = 0,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "HÀNG HOÁ",
                            CategoryRefCode = 2,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8270),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8271),
                            ParentId = 0,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "DỊCH VỤ",
                            CategoryRefCode = 2,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8273),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8273),
                            ParentId = 0,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "TƯƠI SỐNG",
                            CategoryRefCode = 21,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8324),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8325),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "THỰC PHẨM CÔNG NGHỆ",
                            CategoryRefCode = 22,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8327),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8327),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "SỮA",
                            CategoryRefCode = 23,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8334),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8334),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "NƯỚC UỐNG",
                            CategoryRefCode = 24,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8335),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8336),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "ĐỒ UỐNG CÓ CỒN",
                            CategoryRefCode = 25,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8337),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8337),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "HOÁ MỸ PHẨM",
                            CategoryRefCode = 26,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8338),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8339),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "ĐỒ GIA DỤNG",
                            CategoryRefCode = 27,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8342),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8343),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "ĐỒ CHƠI TRẺ EM",
                            CategoryRefCode = 28,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8344),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8344),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 12,
                            CategoryName = "NHÃN HÀNG RIÊNG",
                            CategoryRefCode = 29,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8345),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8346),
                            ParentId = 2,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 13,
                            CategoryName = "THANH TOÁN ĐIỆN TỬ",
                            CategoryRefCode = 31,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8347),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8347),
                            ParentId = 3,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 14,
                            CategoryName = "CARD ĐIỆN THOẠI",
                            CategoryRefCode = 32,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8348),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8349),
                            ParentId = 3,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 15,
                            CategoryName = "Thịt tươi Các Loại",
                            CategoryRefCode = 211,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8350),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8350),
                            ParentId = 4,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 16,
                            CategoryName = "Hải Sản",
                            CategoryRefCode = 212,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8351),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8352),
                            ParentId = 4,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 17,
                            CategoryName = "Rau Củ",
                            CategoryRefCode = 213,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8354),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8355),
                            ParentId = 4,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 18,
                            CategoryName = "Trái Cây",
                            CategoryRefCode = 214,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8357),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8358),
                            ParentId = 4,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 19,
                            CategoryName = "Thực Phẩm Đông Mát",
                            CategoryRefCode = 215,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8359),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8359),
                            ParentId = 4,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 20,
                            CategoryName = "Bánh Kẹo",
                            CategoryRefCode = 221,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8360),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8361),
                            ParentId = 5,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 21,
                            CategoryName = "Mì/bún/miến (noodle)",
                            CategoryRefCode = 222,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8362),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8362),
                            ParentId = 5,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 22,
                            CategoryName = "Trà, Cà Phê",
                            CategoryRefCode = 223,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8363),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8364),
                            ParentId = 5,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 23,
                            CategoryName = "Gia Vị",
                            CategoryRefCode = 224,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8365),
                            Description = "Các loại gia vị, nuoc tuong, nước mắm, đường muối…",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8365),
                            ParentId = 5,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 24,
                            CategoryName = "Đồ Ăn Vặt",
                            CategoryRefCode = 225,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8366),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8367),
                            ParentId = 5,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 25,
                            CategoryName = "Gạo",
                            CategoryRefCode = 226,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8368),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8369),
                            ParentId = 5,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 26,
                            CategoryName = "Kem",
                            CategoryRefCode = 227,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8370),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8370),
                            ParentId = 5,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 27,
                            CategoryName = "Sữa thanh trùng",
                            CategoryRefCode = 231,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8371),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8372),
                            ParentId = 6,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 28,
                            CategoryName = "Sữa tươi",
                            CategoryRefCode = 232,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8373),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8373),
                            ParentId = 6,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 29,
                            CategoryName = "Sữa đặc",
                            CategoryRefCode = 233,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8374),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8375),
                            ParentId = 6,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 30,
                            CategoryName = "Sữa bột",
                            CategoryRefCode = 234,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8376),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8376),
                            ParentId = 6,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 31,
                            CategoryName = "Bia",
                            CategoryRefCode = 251,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8377),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8378),
                            ParentId = 8,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 32,
                            CategoryName = "Rượu",
                            CategoryRefCode = 252,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8379),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8380),
                            ParentId = 8,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 33,
                            CategoryName = "Tã, giấy các loại",
                            CategoryRefCode = 261,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8381),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8381),
                            ParentId = 9,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 34,
                            CategoryName = "Chăm sóc cá nhân",
                            CategoryRefCode = 262,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8384),
                            Description = "Kem đánh răng, bàn chải đánh răng, các loại mỹ phẩm",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8384),
                            ParentId = 9,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 35,
                            CategoryName = "Hoá phẩm tẩy rửa",
                            CategoryRefCode = 263,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8385),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8386),
                            ParentId = 9,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 36,
                            CategoryName = "Đồ điện gia dụng",
                            CategoryRefCode = 271,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8387),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8387),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 37,
                            CategoryName = "Đồ vệ sinh nhà cửa",
                            CategoryRefCode = 272,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8389),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8389),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 38,
                            CategoryName = "Đồ dùng phòng ăn",
                            CategoryRefCode = 273,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8390),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8391),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 39,
                            CategoryName = "Đồ dùng cho bếp",
                            CategoryRefCode = 274,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8392),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8393),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 40,
                            CategoryName = "Đồ dùng nhà tắm",
                            CategoryRefCode = 275,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8394),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8395),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 41,
                            CategoryName = "Đồ dùng phòng khách",
                            CategoryRefCode = 276,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8396),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8396),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 42,
                            CategoryName = "Đồ dùng phòng ngủ",
                            CategoryRefCode = 277,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8400),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8400),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 43,
                            CategoryName = "Đồ dùng tiện lợi",
                            CategoryRefCode = 278,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8401),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8402),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 44,
                            CategoryName = "Đồ dùng văn phòng",
                            CategoryRefCode = 279,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8403),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8403),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 45,
                            CategoryName = "Đồ dùng văn phòng",
                            CategoryRefCode = 279,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8405),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8405),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 46,
                            CategoryName = "Đồ dùng khác",
                            CategoryRefCode = 280,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8406),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8406),
                            ParentId = 10,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 47,
                            CategoryName = "Gia súc",
                            CategoryRefCode = 2111,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8408),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8408),
                            ParentId = 15,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 48,
                            CategoryName = "Gia cầm",
                            CategoryRefCode = 2112,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8409),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8410),
                            ParentId = 15,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 49,
                            CategoryName = "Cá",
                            CategoryRefCode = 2121,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8411),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8411),
                            ParentId = 16,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 50,
                            CategoryName = "Nhuyễn thể",
                            CategoryRefCode = 2122,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8412),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8413),
                            ParentId = 16,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 51,
                            CategoryName = "Mực",
                            CategoryRefCode = 2123,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8414),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8414),
                            ParentId = 16,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 52,
                            CategoryName = "Mực",
                            CategoryRefCode = 2123,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8415),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8415),
                            ParentId = 16,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 53,
                            CategoryName = "Rau",
                            CategoryRefCode = 2131,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8417),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8417),
                            ParentId = 17,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 54,
                            CategoryName = "Củ",
                            CategoryRefCode = 2132,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8418),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8418),
                            ParentId = 17,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 55,
                            CategoryName = "Trái cây nội địa",
                            CategoryRefCode = 2141,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8420),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8421),
                            ParentId = 18,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 56,
                            CategoryName = "Trái cây nhập khẩu",
                            CategoryRefCode = 2142,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8422),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8422),
                            ParentId = 18,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 57,
                            CategoryName = "Đồ ngoại nhập",
                            CategoryRefCode = 2151,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8423),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8424),
                            ParentId = 19,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 58,
                            CategoryName = "Thực phẩm khô",
                            CategoryRefCode = 2151,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8426),
                            Description = "Cá khô, khô mực",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8426),
                            ParentId = 19,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 59,
                            CategoryName = "Bò",
                            CategoryRefCode = 21111,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8427),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8428),
                            ParentId = 47,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 60,
                            CategoryName = "Heo",
                            CategoryRefCode = 21112,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8429),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8430),
                            ParentId = 47,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 61,
                            CategoryName = "Dê",
                            CategoryRefCode = 21113,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8431),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8431),
                            ParentId = 47,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 62,
                            CategoryName = "Nai",
                            CategoryRefCode = 21114,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8432),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8433),
                            ParentId = 47,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 63,
                            CategoryName = "Gà",
                            CategoryRefCode = 21121,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8434),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8434),
                            ParentId = 48,
                            Status = 0
                        },
                        new
                        {
                            CategoryId = 64,
                            CategoryName = "Vịt",
                            CategoryRefCode = 21122,
                            CreateDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8435),
                            Description = "",
                            ModifyDate = new DateTime(2023, 9, 23, 17, 24, 47, 653, DateTimeKind.Local).AddTicks(8436),
                            ParentId = 48,
                            Status = 0
                        });
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerPoint")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentMethodId"), 1L, 1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethodCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultPurchasePrice")
                        .HasColumnType("int");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Tax")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ProductStorage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StorageId");

                    b.ToTable("ProductStorages");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ProductUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("GrossProfit")
                        .HasColumnType("real");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OldPrice")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UnitExchange")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("ProductUnit");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<string>("BillNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliverPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceivingDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherNumber")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("BranchId");

                    b.HasIndex("StorageId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.RequestItem", b =>
                {
                    b.Property<int>("RequestItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestItemId"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("RequestItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestItem");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.RequestSample", b =>
                {
                    b.Property<int>("RequestSampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestSampleId"), 1L, 1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestSampleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestSampleNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RequestSampleId");

                    b.HasIndex("SupplierId");

                    b.ToTable("RequestSamples");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.RequestSampleItem", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RequestSampleId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId", "RequestSampleId", "UnitId");

                    b.HasIndex("RequestSampleId");

                    b.HasIndex("UnitId");

                    b.ToTable("RequestSampleItems");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Storage", b =>
                {
                    b.Property<int>("StorageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StorageId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StorageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorageId");

                    b.HasIndex("BranchId");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitId"), 1L, 1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Bill", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.BillDetail", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.BillPayment", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Product", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ProductStorage", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ProductUnit", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Request", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Storage");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.RequestItem", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Request", null)
                        .WithMany("RequestItemId")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.RequestSample", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.RequestSampleItem", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Product", "Product")
                        .WithMany("RequestSampleItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.RequestSample", "requestSample")
                        .WithMany("RequestSampleItems")
                        .HasForeignKey("RequestSampleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Common.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Unit");

                    b.Navigation("requestSample");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Storage", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Product", b =>
                {
                    b.Navigation("RequestSampleItems");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Request", b =>
                {
                    b.Navigation("RequestItemId");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.RequestSample", b =>
                {
                    b.Navigation("RequestSampleItems");
                });
#pragma warning restore 612, 618
        }
    }
}
