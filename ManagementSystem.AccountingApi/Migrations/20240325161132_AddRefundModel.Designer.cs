// <auto-generated />
using System;
using ManagementSystem.AccountingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagementSystem.AccountingApi.Migrations
{
    [DbContext(typeof(AccountingDbContext))]
    [Migration("20240325161132_AddRefundModel")]
    partial class AddRefundModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManagementSystem.Common.Entities.ActivityLog", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.ToTable("ActivityLog");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.CreditVoucher", b =>
                {
                    b.Property<int>("DocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentNumber"), 1L, 1);

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("TotalMoney")
                        .HasColumnType("real");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentNumber");

                    b.HasIndex("GroupId");

                    b.ToTable("CreditVouchers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.CreditVoucherDeleted", b =>
                {
                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalMoney")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentNumber");

                    b.ToTable("CreditVoucherDeleted");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.DebitVoucher", b =>
                {
                    b.Property<int>("DocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentNumber"), 1L, 1);

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExchangeRate")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("NTMoney")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalMoneyVND")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentNumber");

                    b.HasIndex("GroupId");

                    b.ToTable("DebitVouchers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.DocumentGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("DocumentGroups");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ExchangeItemVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("RefundAmount")
                        .HasColumnType("real");

                    b.Property<int>("TotalExchangeProduct")
                        .HasColumnType("int");

                    b.Property<int>("TotalReturnProduct")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExchangeItemVouchers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ExchangeProduct", b =>
                {
                    b.Property<int>("ExchangeItemVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("ExchangeItemVoucherId", "ProductId");

                    b.ToTable("ExchangeProducts");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryAuditDetail", b =>
                {
                    b.Property<int>("ShiftEndId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<float>("ActualAmount")
                        .HasColumnType("real");

                    b.Property<float>("SystemAmount")
                        .HasColumnType("real");

                    b.HasKey("ShiftEndId", "ProductId", "UnitId");

                    b.ToTable("InventoryAuditDetails");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryVoucher", b =>
                {
                    b.Property<int>("DocummentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocummentNumber"), 1L, 1);

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchasingRepresentive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentivePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocummentNumber");

                    b.HasIndex("GroupId");

                    b.ToTable("InventoryVouchers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryVoucherDeleted", b =>
                {
                    b.Property<int>("DocummentNumber")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchasingRepresentive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentivePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocummentNumber");

                    b.ToTable("InventoryVoucherDeleted");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryVoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreditAccount")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAccountMoney")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccount")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountMoney")
                        .HasColumnType("int");

                    b.Property<int>("DocummentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentDiscountAccount")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentDiscountMoney")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float?>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("TaxAccount")
                        .HasColumnType("int");

                    b.Property<int?>("TaxMoney")
                        .HasColumnType("int");

                    b.Property<int?>("TotalMoneyAfterTax")
                        .HasColumnType("int");

                    b.Property<float?>("TotalMoneyBeforeTax")
                        .HasColumnType("real");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocummentNumber");

                    b.ToTable("InventoryVoucherDetails");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryVoucherDetailDeleted", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAccount")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAccountMoney")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccount")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountMoney")
                        .HasColumnType("int");

                    b.Property<int>("DocummentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentDiscountAccount")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentDiscountMoney")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float?>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("TaxAccount")
                        .HasColumnType("int");

                    b.Property<int?>("TaxMoney")
                        .HasColumnType("int");

                    b.Property<int?>("TotalMoneyAfterTax")
                        .HasColumnType("int");

                    b.Property<float?>("TotalMoneyBeforeTax")
                        .HasColumnType("real");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InventoryVoucherDetailDeleted");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Leger", b =>
                {
                    b.Property<int>("LegerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LegerId"), 1L, 1);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoccumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DoccumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LegerId");

                    b.ToTable("Legers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.LegerDeleted", b =>
                {
                    b.Property<int>("LegerId")
                        .HasColumnType("int");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoccumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DoccumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LegerId");

                    b.ToTable("LegerDeleted");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.OtherAccountEntry", b =>
                {
                    b.Property<int>("DocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentNumber"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentNumber");

                    b.HasIndex("GroupId");

                    b.ToTable("OtherAccountEntries");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.PaymentMenthodReasonRef", b =>
                {
                    b.Property<string>("MethodCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MethodCode", "ReasonCode");

                    b.ToTable("PaymentMenthodReasonRefs");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.PaymentVoucher", b =>
                {
                    b.Property<int>("DocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentNumber"), 1L, 1);

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExchangeRate")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<long?>("NTMoney")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<long?>("TotalMoneyVND")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentNumber");

                    b.HasIndex("GroupId");

                    b.ToTable("PaymentVouchers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ReceiptVoucher", b =>
                {
                    b.Property<int>("DocumentNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentNumber"), 1L, 1);

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("TotalMoney")
                        .HasColumnType("real");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentNumber");

                    b.HasIndex("GroupId");

                    b.ToTable("ReceiptVouchers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ReceiptVoucherDeleted", b =>
                {
                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalMoney")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DocumentNumber");

                    b.ToTable("ReceiptVoucherDeleted");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.Recordingtransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recordingtransactions");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ReturnProduct", b =>
                {
                    b.Property<int>("ExchangeItemVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("ReasonRef")
                        .HasColumnType("int");

                    b.HasKey("ExchangeItemVoucherId", "ProductId");

                    b.ToTable("ReturnProducts");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftEndReport", b =>
                {
                    b.Property<int>("ShiftEndId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShiftEndId"), 1L, 1);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyMoneyTransferred")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ShiftEndId");

                    b.ToTable("ShiftEndReports");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftHandoverCashDetail", b =>
                {
                    b.Property<int>("ShiftEndId")
                        .HasColumnType("int");

                    b.Property<int>("Denomination")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("AmountReceive")
                        .HasColumnType("int");

                    b.HasKey("ShiftEndId", "Denomination");

                    b.ToTable("ShiftHandoverCashDetails");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftHandovers", b =>
                {
                    b.Property<int>("HandoverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HandoverId"), 1L, 1);

                    b.Property<long?>("CashHandover")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyMoneyTransferred")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("HandoverTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiverUserId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderUserI2")
                        .HasColumnType("int");

                    b.Property<int?>("SenderUserId1")
                        .HasColumnType("int");

                    b.Property<int>("ShiftEndId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<long?>("TotalShiftMoney")
                        .HasColumnType("bigint");

                    b.HasKey("HandoverId");

                    b.HasIndex("ShiftEndId");

                    b.ToTable("ShiftHandovers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"), 1L, 1);

                    b.Property<long>("ActualMoneyForNextShift")
                        .HasColumnType("bigint");

                    b.Property<long>("ExcessMoney")
                        .HasColumnType("bigint");

                    b.Property<int?>("HandoverId")
                        .HasColumnType("int");

                    b.Property<long>("LackOfMoney")
                        .HasColumnType("bigint");

                    b.Property<long>("OtherExpense")
                        .HasColumnType("bigint");

                    b.Property<long>("RemindMoneyForNextShift")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int>("TotalBill")
                        .HasColumnType("int");

                    b.Property<long>("TotalCardAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalCashAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalExpenses")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalInternalConsumption")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalMOMOAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalOtherAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalPointAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalRevenue")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalShiftInMoney")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalVoucherAmount")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserCreatedId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("HandoverId");

                    b.ToTable("ShiftReports");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.TypesOfAccounts", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("AccountCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AccountParentId")
                        .HasColumnType("int");

                    b.Property<int>("AccountRank")
                        .HasColumnType("int");

                    b.Property<int?>("BalanceType")
                        .HasColumnType("int");

                    b.Property<int?>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HasAccountItem")
                        .HasColumnType("int");

                    b.Property<int?>("HasCosting")
                        .HasColumnType("int");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountId");

                    b.ToTable("TypesOfAccounts");
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.AccountsDto", b =>
                {
                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AccountsDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.BillPaymentDetailResponseDto", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTransactionRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillPaymentDetailResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.CreditVoucherResponseDto", b =>
                {
                    b.Property<string>("Cashier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("ForReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalMoney")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable("CreditVoucherResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.DamagedGoodsStorageDto", b =>
                {
                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<string>("StorageName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DamagedGoodsStorageDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.DebitVoucherResponseDto", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExchangeRate")
                        .HasColumnType("int");

                    b.Property<int?>("NTMoney")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalMoneyVND")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.ToTable("DebitVoucherResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.DocumentGroupResponseDto", b =>
                {
                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoccumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DoccumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.ToTable("DocumentGroupResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.InventoryVoucherDetailResponseDto", b =>
                {
                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreditAccount")
                        .HasColumnType("int");

                    b.Property<int?>("CreditAccountMoney")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccount")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountMoney")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultPurchasePrice")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentDiscountAccount")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentDiscountMoney")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Tax")
                        .HasColumnType("int");

                    b.Property<int?>("TaxAccount")
                        .HasColumnType("int");

                    b.Property<int?>("TaxMoney")
                        .HasColumnType("int");

                    b.Property<int?>("TotalMoneyAfterTax")
                        .HasColumnType("int");

                    b.Property<float?>("TotalMoneyBeforeTax")
                        .HasColumnType("real");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("InventoryVoucherDetailResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.InventoryVoucherResponseDto", b =>
                {
                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocummentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryCreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryDebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchasingRepresentive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonFor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentivePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable("InventoryVoucherResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.LegerExportExcelResponseDto", b =>
                {
                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoccumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DoccumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.ToTable("LegerExportExcelResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.LegerResponseDto", b =>
                {
                    b.Property<long?>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int?>("BillId")
                        .HasColumnType("int");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoccumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DoccumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.ToTable("LegerResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.OtherAccountEntryResponseDto", b =>
                {
                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("OtherAccountEntryResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.PaymentMethodDto", b =>
                {
                    b.Property<string>("PaymentMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("PaymentMethodDto");
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.PaymentMethodInformationDto", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<long?>("TotalMoneyVND")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionDate")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("PaymentMethodInformationDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.PaymentMethodResponseDto", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.ToTable("PaymentMethodResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.PaymentVoucherResponseDto", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExchangeRate")
                        .HasColumnType("int");

                    b.Property<long?>("NTMoney")
                        .HasColumnType("bigint");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TotalMoneyVND")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.ToTable("PaymentVoucherResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ProductResponseDto", b =>
                {
                    b.Property<int?>("CreditAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("PriceBeforeTax")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ProductResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ProductStorageInformationDto", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float?>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("StorageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<string>("StorageName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ProductStorageInformationDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ReceiptResponseDto", b =>
                {
                    b.Property<string>("Cashier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("ForReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalMoney")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable("ReceiptResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ScalarResult<int?>", b =>
                {
                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.ToTable("ScalarResult<int?>");
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ScalarResult<int>", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("ScalarResult<int>");
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ScalarResult<string>", b =>
                {
                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ScalarResult<string>");
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ShiftEndReportView", b =>
                {
                    b.Property<float?>("ActualAmount")
                        .HasColumnType("real");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyMoneyTransferred")
                        .HasColumnType("int");

                    b.Property<int?>("Denomination")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShiftEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftEndId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SystemAmount")
                        .HasColumnType("real");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ShiftEndReportView", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ShiftEndResponseDto", b =>
                {
                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyMoneyTransferred")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftEndId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ShiftEndResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ShiftHandoverResponseDto", b =>
                {
                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurShiftAmount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("HandoverDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HandoverId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PreShiftAmount")
                        .HasColumnType("bigint");

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderId1")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId2")
                        .HasColumnType("int");

                    b.Property<string>("SenderName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderUser2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftEndId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<string>("StorageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalAmount")
                        .HasColumnType("int");

                    b.ToTable("ShiftHandoverResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.ShiftReportResponseDto", b =>
                {
                    b.Property<long>("ActualMoneyForNextShift")
                        .HasColumnType("bigint");

                    b.Property<long>("ExcessMoney")
                        .HasColumnType("bigint");

                    b.Property<long>("LackOfMoney")
                        .HasColumnType("bigint");

                    b.Property<long>("OtherExpense")
                        .HasColumnType("bigint");

                    b.Property<long>("RemindMoneyForNextShift")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ShiftEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalBill")
                        .HasColumnType("int");

                    b.Property<long>("TotalCardAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalCashAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalExpenses")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalInternalConsumption")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalMOMOAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalOtherAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalPointAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalRevenue")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalShiftInMoney")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalVoucherAmount")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("ShiftReportResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.Dtos.UnitResponseDto", b =>
                {
                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UnitResponseDtos", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Models.RecTransInfoResponseDto", b =>
                {
                    b.Property<string>("CreditAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebitAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable("RecTransInfoResponseDto", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.CreditVoucher", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("DocumentGroup");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.DebitVoucher", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("DocumentGroup");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryAuditDetail", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.ShiftEndReport", "ShiftEndReport")
                        .WithMany("InventoryAuditDetails")
                        .HasForeignKey("ShiftEndId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiftEndReport");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryVoucher", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("DocumentGroup");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryVoucherDetail", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.InventoryVoucher", "InventoryVoucher")
                        .WithMany("Details")
                        .HasForeignKey("DocummentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryVoucher");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.OtherAccountEntry", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("DocumentGroup");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.PaymentVoucher", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("DocumentGroup");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ReceiptVoucher", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.DocumentGroup", "DocumentGroup")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("DocumentGroup");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftHandoverCashDetail", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.ShiftEndReport", "ShiftEndReport")
                        .WithMany("ShiftHandoverCashDetails")
                        .HasForeignKey("ShiftEndId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiftEndReport");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftHandovers", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.ShiftEndReport", "ShiftEndReport")
                        .WithMany()
                        .HasForeignKey("ShiftEndId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShiftEndReport");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftReport", b =>
                {
                    b.HasOne("ManagementSystem.Common.Entities.ShiftHandovers", "ShiftHandovers")
                        .WithMany()
                        .HasForeignKey("HandoverId");

                    b.Navigation("ShiftHandovers");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.InventoryVoucher", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("ManagementSystem.Common.Entities.ShiftEndReport", b =>
                {
                    b.Navigation("InventoryAuditDetails");

                    b.Navigation("ShiftHandoverCashDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
